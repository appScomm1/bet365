/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, Input, Output, EventEmitter, HostBinding, HostListener } from '@angular/core';
import { coerceBooleanProperty } from '../helpers';
import { DomSanitizer } from '@angular/platform-browser';
/** @enum {number} */
var KEY_CODE = {
    BACKSPACE: 8,
    DELETE: 46,
};
KEY_CODE[KEY_CODE.BACKSPACE] = 'BACKSPACE';
KEY_CODE[KEY_CODE.DELETE] = 'DELETE';
var NgxDropzonePreviewComponent = /** @class */ (function () {
    function NgxDropzonePreviewComponent(sanitizer) {
        this.sanitizer = sanitizer;
        this._removable = false;
        /**
         * Emitted when the element should be removed.
         */
        this.removed = new EventEmitter();
        /**
         * Make the preview item focusable using the tab key.
         */
        this.tabIndex = 0;
    }
    Object.defineProperty(NgxDropzonePreviewComponent.prototype, "removable", {
        /** Allow the user to remove files. */
        get: /**
         * Allow the user to remove files.
         * @return {?}
         */
        function () {
            return this._removable;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._removable = coerceBooleanProperty(value);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} event
     * @return {?}
     */
    NgxDropzonePreviewComponent.prototype.keyEvent = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        switch (event.keyCode) {
            case KEY_CODE.BACKSPACE:
            case KEY_CODE.DELETE:
                this.remove();
                break;
            default:
                break;
        }
    };
    Object.defineProperty(NgxDropzonePreviewComponent.prototype, "hostStyle", {
        /** We use the HostBinding to pass these common styles to child components. */
        get: /**
         * We use the HostBinding to pass these common styles to child components.
         * @return {?}
         */
        function () {
            /** @type {?} */
            var styles = "\n\t\t\tdisplay: flex;\n\t\t\theight: 140px;\n\t\t\tmin-height: 140px;\n\t\t\tmin-width: 180px;\n\t\t\tmax-width: 180px;\n\t\t\tjustify-content: center;\n\t\t\talign-items: center;\n\t\t\tpadding: 0 20px;\n\t\t\tmargin: 10px;\n\t\t\tborder-radius: 5px;\n\t\t\tposition: relative;\n\t\t";
            return this.sanitizer.bypassSecurityTrustStyle(styles);
        },
        enumerable: true,
        configurable: true
    });
    /** Remove method to be used from the template. */
    /**
     * Remove method to be used from the template.
     * @param {?} event
     * @return {?}
     */
    NgxDropzonePreviewComponent.prototype._remove = /**
     * Remove method to be used from the template.
     * @param {?} event
     * @return {?}
     */
    function (event) {
        event.stopPropagation();
        this.remove();
    };
    /** Remove the preview item (use from component code). */
    /**
     * Remove the preview item (use from component code).
     * @return {?}
     */
    NgxDropzonePreviewComponent.prototype.remove = /**
     * Remove the preview item (use from component code).
     * @return {?}
     */
    function () {
        if (this._removable) {
            this.removed.next(this.file);
        }
    };
    /**
     * @protected
     * @return {?}
     */
    NgxDropzonePreviewComponent.prototype.readFile = /**
     * @protected
     * @return {?}
     */
    function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var _this = this;
            return tslib_1.__generator(this, function (_a) {
                return [2 /*return*/, new Promise((/**
                     * @param {?} resolve
                     * @param {?} reject
                     * @return {?}
                     */
                    function (resolve, reject) {
                        /** @type {?} */
                        var reader = new FileReader();
                        reader.onload = (/**
                         * @param {?} e
                         * @return {?}
                         */
                        function (e) {
                            return resolve(((/** @type {?} */ (e.target))).result);
                        });
                        reader.onerror = (/**
                         * @param {?} e
                         * @return {?}
                         */
                        function (e) {
                            console.error("FileReader failed on file " + _this.file.name + ".");
                            return reject(null);
                        });
                        if (!_this.file) {
                            console.error('No file to read. Please provide a file using the [file] Input property.');
                            return reject(null);
                        }
                        reader.readAsDataURL(_this.file);
                    }))];
            });
        });
    };
    NgxDropzonePreviewComponent.decorators = [
        { type: Component, args: [{
                    selector: 'ngx-dropzone-preview',
                    template: "\n\t\t<ng-content select=\"ngx-dropzone-label\"></ng-content>\n\t\t<ngx-dropzone-remove-badge *ngIf=\"removable\" (click)=\"_remove($event)\">\n\t\t</ngx-dropzone-remove-badge>\n\t",
                    styles: [":host(){background-image:linear-gradient(to top,#ededed,#efefef,#f1f1f1,#f4f4f4,#f6f6f6)}:host():focus,:host():hover{background-image:linear-gradient(to top,#e3e3e3,#ebeaea,#e8e7e7,#ebeaea,#f4f4f4);outline:0}:host():focus ngx-dropzone-remove-badge,:host():hover ngx-dropzone-remove-badge{opacity:1}:host() ngx-dropzone-remove-badge{opacity:0}:host() ::ng-deep ngx-dropzone-label{overflow-wrap:break-word}"]
                },] },
    ];
    /** @nocollapse */
    NgxDropzonePreviewComponent.ctorParameters = function () { return [
        { type: DomSanitizer }
    ]; };
    NgxDropzonePreviewComponent.propDecorators = {
        file: [{ type: Input }],
        removable: [{ type: Input }],
        removed: [{ type: Output }],
        keyEvent: [{ type: HostListener, args: ['keyup', ['$event'],] }],
        hostStyle: [{ type: HostBinding, args: ['style',] }],
        tabIndex: [{ type: HostBinding, args: ['tabindex',] }]
    };
    return NgxDropzonePreviewComponent;
}());
export { NgxDropzonePreviewComponent };
if (false) {
    /**
     * The file to preview.
     * @type {?}
     */
    NgxDropzonePreviewComponent.prototype.file;
    /**
     * @type {?}
     * @protected
     */
    NgxDropzonePreviewComponent.prototype._removable;
    /**
     * Emitted when the element should be removed.
     * @type {?}
     */
    NgxDropzonePreviewComponent.prototype.removed;
    /**
     * Make the preview item focusable using the tab key.
     * @type {?}
     */
    NgxDropzonePreviewComponent.prototype.tabIndex;
    /**
     * @type {?}
     * @protected
     */
    NgxDropzonePreviewComponent.prototype.sanitizer;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWRyb3B6b25lLXByZXZpZXcuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LWRyb3B6b25lLyIsInNvdXJjZXMiOlsibGliL25neC1kcm9wem9uZS1wcmV2aWV3L25neC1kcm9wem9uZS1wcmV2aWV3LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxZQUFZLEVBQUUsV0FBVyxFQUFFLFlBQVksRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNsRyxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDbkQsT0FBTyxFQUFhLFlBQVksRUFBRSxNQUFNLDJCQUEyQixDQUFDOzs7SUFHbkUsWUFBYTtJQUNiLFVBQVc7Ozs7QUFHWjtJQVdDLHFDQUNXLFNBQXVCO1FBQXZCLGNBQVMsR0FBVCxTQUFTLENBQWM7UUFjeEIsZUFBVSxHQUFHLEtBQUssQ0FBQzs7OztRQUdWLFlBQU8sR0FBRyxJQUFJLFlBQVksRUFBUSxDQUFDOzs7O1FBbUM3QixhQUFRLEdBQUcsQ0FBQyxDQUFDO0lBbkRsQyxDQUFDO0lBTUwsc0JBQ0ksa0RBQVM7UUFGYixzQ0FBc0M7Ozs7O1FBQ3RDO1lBRUMsT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDO1FBQ3hCLENBQUM7Ozs7O1FBQ0QsVUFBYyxLQUFjO1lBQzNCLElBQUksQ0FBQyxVQUFVLEdBQUcscUJBQXFCLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDaEQsQ0FBQzs7O09BSEE7Ozs7O0lBVUQsOENBQVE7Ozs7SUFEUixVQUNTLEtBQW9CO1FBQzVCLFFBQVEsS0FBSyxDQUFDLE9BQU8sRUFBRTtZQUN0QixLQUFLLFFBQVEsQ0FBQyxTQUFTLENBQUM7WUFDeEIsS0FBSyxRQUFRLENBQUMsTUFBTTtnQkFDbkIsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDO2dCQUNkLE1BQU07WUFDUDtnQkFDQyxNQUFNO1NBQ1A7SUFDRixDQUFDO0lBR0Qsc0JBQ0ksa0RBQVM7UUFGYiw4RUFBOEU7Ozs7O1FBQzlFOztnQkFFTyxNQUFNLEdBQUcsK1JBWWQ7WUFFRCxPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsd0JBQXdCLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDeEQsQ0FBQzs7O09BQUE7SUFLRCxrREFBa0Q7Ozs7OztJQUNsRCw2Q0FBTzs7Ozs7SUFBUCxVQUFRLEtBQUs7UUFDWixLQUFLLENBQUMsZUFBZSxFQUFFLENBQUM7UUFDeEIsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDO0lBQ2YsQ0FBQztJQUVELHlEQUF5RDs7Ozs7SUFDekQsNENBQU07Ozs7SUFBTjtRQUNDLElBQUksSUFBSSxDQUFDLFVBQVUsRUFBRTtZQUNwQixJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7U0FDN0I7SUFDRixDQUFDOzs7OztJQUVlLDhDQUFROzs7O0lBQXhCOzs7O2dCQUNDLHNCQUFPLElBQUksT0FBTzs7Ozs7b0JBQXVCLFVBQUMsT0FBTyxFQUFFLE1BQU07OzRCQUNsRCxNQUFNLEdBQUcsSUFBSSxVQUFVLEVBQUU7d0JBRS9CLE1BQU0sQ0FBQyxNQUFNOzs7O3dCQUFHLFVBQUEsQ0FBQzs0QkFDaEIsT0FBTyxPQUFPLENBQUMsQ0FBQyxtQkFBQSxDQUFDLENBQUMsTUFBTSxFQUFjLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQzt3QkFDakQsQ0FBQyxDQUFBLENBQUM7d0JBRUYsTUFBTSxDQUFDLE9BQU87Ozs7d0JBQUcsVUFBQSxDQUFDOzRCQUNqQixPQUFPLENBQUMsS0FBSyxDQUFDLCtCQUE2QixLQUFJLENBQUMsSUFBSSxDQUFDLElBQUksTUFBRyxDQUFDLENBQUM7NEJBQzlELE9BQU8sTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO3dCQUNyQixDQUFDLENBQUEsQ0FBQzt3QkFFRixJQUFJLENBQUMsS0FBSSxDQUFDLElBQUksRUFBRTs0QkFDZixPQUFPLENBQUMsS0FBSyxDQUFDLHlFQUF5RSxDQUFDLENBQUM7NEJBQ3pGLE9BQU8sTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO3lCQUNwQjt3QkFFRCxNQUFNLENBQUMsYUFBYSxDQUFDLEtBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztvQkFDakMsQ0FBQyxFQUFDLEVBQUM7OztLQUNIOztnQkFuR0QsU0FBUyxTQUFDO29CQUNWLFFBQVEsRUFBRSxzQkFBc0I7b0JBQ2hDLFFBQVEsRUFBRSxzTEFJVDtvQkFDRCxNQUFNLEVBQUUsQ0FBQyxzWkFBc1osQ0FBQztpQkFDaGE7Ozs7Z0JBZm1CLFlBQVk7Ozt1QkF1QjlCLEtBQUs7NEJBR0wsS0FBSzswQkFVTCxNQUFNOzJCQUVOLFlBQVksU0FBQyxPQUFPLEVBQUUsQ0FBQyxRQUFRLENBQUM7NEJBYWhDLFdBQVcsU0FBQyxPQUFPOzJCQW9CbkIsV0FBVyxTQUFDLFVBQVU7O0lBb0N4QixrQ0FBQztDQUFBLEFBcEdELElBb0dDO1NBM0ZZLDJCQUEyQjs7Ozs7O0lBT3ZDLDJDQUFvQjs7Ozs7SUFVcEIsaURBQTZCOzs7OztJQUc3Qiw4Q0FBc0Q7Ozs7O0lBbUN0RCwrQ0FBc0M7Ozs7O0lBcERyQyxnREFBaUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPdXRwdXQsIEV2ZW50RW1pdHRlciwgSG9zdEJpbmRpbmcsIEhvc3RMaXN0ZW5lciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgY29lcmNlQm9vbGVhblByb3BlcnR5IH0gZnJvbSAnLi4vaGVscGVycyc7XG5pbXBvcnQgeyBTYWZlU3R5bGUsIERvbVNhbml0aXplciB9IGZyb20gJ0Bhbmd1bGFyL3BsYXRmb3JtLWJyb3dzZXInO1xuXG5lbnVtIEtFWV9DT0RFIHtcblx0QkFDS1NQQUNFID0gOCxcblx0REVMRVRFID0gNDZcbn1cblxuQENvbXBvbmVudCh7XG5cdHNlbGVjdG9yOiAnbmd4LWRyb3B6b25lLXByZXZpZXcnLFxuXHR0ZW1wbGF0ZTogYFxuXHRcdDxuZy1jb250ZW50IHNlbGVjdD1cIm5neC1kcm9wem9uZS1sYWJlbFwiPjwvbmctY29udGVudD5cblx0XHQ8bmd4LWRyb3B6b25lLXJlbW92ZS1iYWRnZSAqbmdJZj1cInJlbW92YWJsZVwiIChjbGljayk9XCJfcmVtb3ZlKCRldmVudClcIj5cblx0XHQ8L25neC1kcm9wem9uZS1yZW1vdmUtYmFkZ2U+XG5cdGAsXG5cdHN0eWxlczogW2A6aG9zdCgpe2JhY2tncm91bmQtaW1hZ2U6bGluZWFyLWdyYWRpZW50KHRvIHRvcCwjZWRlZGVkLCNlZmVmZWYsI2YxZjFmMSwjZjRmNGY0LCNmNmY2ZjYpfTpob3N0KCk6Zm9jdXMsOmhvc3QoKTpob3ZlcntiYWNrZ3JvdW5kLWltYWdlOmxpbmVhci1ncmFkaWVudCh0byB0b3AsI2UzZTNlMywjZWJlYWVhLCNlOGU3ZTcsI2ViZWFlYSwjZjRmNGY0KTtvdXRsaW5lOjB9Omhvc3QoKTpmb2N1cyBuZ3gtZHJvcHpvbmUtcmVtb3ZlLWJhZGdlLDpob3N0KCk6aG92ZXIgbmd4LWRyb3B6b25lLXJlbW92ZS1iYWRnZXtvcGFjaXR5OjF9Omhvc3QoKSBuZ3gtZHJvcHpvbmUtcmVtb3ZlLWJhZGdle29wYWNpdHk6MH06aG9zdCgpIDo6bmctZGVlcCBuZ3gtZHJvcHpvbmUtbGFiZWx7b3ZlcmZsb3ctd3JhcDpicmVhay13b3JkfWBdXG59KVxuZXhwb3J0IGNsYXNzIE5neERyb3B6b25lUHJldmlld0NvbXBvbmVudCB7XG5cblx0Y29uc3RydWN0b3IoXG5cdFx0cHJvdGVjdGVkIHNhbml0aXplcjogRG9tU2FuaXRpemVyXG5cdCkgeyB9XG5cblx0LyoqIFRoZSBmaWxlIHRvIHByZXZpZXcuICovXG5cdEBJbnB1dCgpIGZpbGU6IEZpbGU7XG5cblx0LyoqIEFsbG93IHRoZSB1c2VyIHRvIHJlbW92ZSBmaWxlcy4gKi9cblx0QElucHV0KClcblx0Z2V0IHJlbW92YWJsZSgpOiBib29sZWFuIHtcblx0XHRyZXR1cm4gdGhpcy5fcmVtb3ZhYmxlO1xuXHR9XG5cdHNldCByZW1vdmFibGUodmFsdWU6IGJvb2xlYW4pIHtcblx0XHR0aGlzLl9yZW1vdmFibGUgPSBjb2VyY2VCb29sZWFuUHJvcGVydHkodmFsdWUpO1xuXHR9XG5cdHByb3RlY3RlZCBfcmVtb3ZhYmxlID0gZmFsc2U7XG5cblx0LyoqIEVtaXR0ZWQgd2hlbiB0aGUgZWxlbWVudCBzaG91bGQgYmUgcmVtb3ZlZC4gKi9cblx0QE91dHB1dCgpIHJlYWRvbmx5IHJlbW92ZWQgPSBuZXcgRXZlbnRFbWl0dGVyPEZpbGU+KCk7XG5cblx0QEhvc3RMaXN0ZW5lcigna2V5dXAnLCBbJyRldmVudCddKVxuXHRrZXlFdmVudChldmVudDogS2V5Ym9hcmRFdmVudCkge1xuXHRcdHN3aXRjaCAoZXZlbnQua2V5Q29kZSkge1xuXHRcdFx0Y2FzZSBLRVlfQ09ERS5CQUNLU1BBQ0U6XG5cdFx0XHRjYXNlIEtFWV9DT0RFLkRFTEVURTpcblx0XHRcdFx0dGhpcy5yZW1vdmUoKTtcblx0XHRcdFx0YnJlYWs7XG5cdFx0XHRkZWZhdWx0OlxuXHRcdFx0XHRicmVhaztcblx0XHR9XG5cdH1cblxuXHQvKiogV2UgdXNlIHRoZSBIb3N0QmluZGluZyB0byBwYXNzIHRoZXNlIGNvbW1vbiBzdHlsZXMgdG8gY2hpbGQgY29tcG9uZW50cy4gKi9cblx0QEhvc3RCaW5kaW5nKCdzdHlsZScpXG5cdGdldCBob3N0U3R5bGUoKTogU2FmZVN0eWxlIHtcblx0XHRjb25zdCBzdHlsZXMgPSBgXG5cdFx0XHRkaXNwbGF5OiBmbGV4O1xuXHRcdFx0aGVpZ2h0OiAxNDBweDtcblx0XHRcdG1pbi1oZWlnaHQ6IDE0MHB4O1xuXHRcdFx0bWluLXdpZHRoOiAxODBweDtcblx0XHRcdG1heC13aWR0aDogMTgwcHg7XG5cdFx0XHRqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcblx0XHRcdGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5cdFx0XHRwYWRkaW5nOiAwIDIwcHg7XG5cdFx0XHRtYXJnaW46IDEwcHg7XG5cdFx0XHRib3JkZXItcmFkaXVzOiA1cHg7XG5cdFx0XHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdFx0YDtcblxuXHRcdHJldHVybiB0aGlzLnNhbml0aXplci5ieXBhc3NTZWN1cml0eVRydXN0U3R5bGUoc3R5bGVzKTtcblx0fVxuXG5cdC8qKiBNYWtlIHRoZSBwcmV2aWV3IGl0ZW0gZm9jdXNhYmxlIHVzaW5nIHRoZSB0YWIga2V5LiAqL1xuXHRASG9zdEJpbmRpbmcoJ3RhYmluZGV4JykgdGFiSW5kZXggPSAwO1xuXG5cdC8qKiBSZW1vdmUgbWV0aG9kIHRvIGJlIHVzZWQgZnJvbSB0aGUgdGVtcGxhdGUuICovXG5cdF9yZW1vdmUoZXZlbnQpIHtcblx0XHRldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcblx0XHR0aGlzLnJlbW92ZSgpO1xuXHR9XG5cblx0LyoqIFJlbW92ZSB0aGUgcHJldmlldyBpdGVtICh1c2UgZnJvbSBjb21wb25lbnQgY29kZSkuICovXG5cdHJlbW92ZSgpIHtcblx0XHRpZiAodGhpcy5fcmVtb3ZhYmxlKSB7XG5cdFx0XHR0aGlzLnJlbW92ZWQubmV4dCh0aGlzLmZpbGUpO1xuXHRcdH1cblx0fVxuXG5cdHByb3RlY3RlZCBhc3luYyByZWFkRmlsZSgpOiBQcm9taXNlPHN0cmluZyB8IEFycmF5QnVmZmVyPiB7XG5cdFx0cmV0dXJuIG5ldyBQcm9taXNlPHN0cmluZyB8IEFycmF5QnVmZmVyPigocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG5cdFx0XHRjb25zdCByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpO1xuXG5cdFx0XHRyZWFkZXIub25sb2FkID0gZSA9PiB7XG5cdFx0XHRcdHJldHVybiByZXNvbHZlKChlLnRhcmdldCBhcyBGaWxlUmVhZGVyKS5yZXN1bHQpO1xuXHRcdFx0fTtcblxuXHRcdFx0cmVhZGVyLm9uZXJyb3IgPSBlID0+IHtcblx0XHRcdFx0Y29uc29sZS5lcnJvcihgRmlsZVJlYWRlciBmYWlsZWQgb24gZmlsZSAke3RoaXMuZmlsZS5uYW1lfS5gKTtcblx0XHRcdFx0cmV0dXJuIHJlamVjdChudWxsKTtcblx0XHRcdH07XG5cblx0XHRcdGlmICghdGhpcy5maWxlKSB7XG5cdFx0XHRcdGNvbnNvbGUuZXJyb3IoJ05vIGZpbGUgdG8gcmVhZC4gUGxlYXNlIHByb3ZpZGUgYSBmaWxlIHVzaW5nIHRoZSBbZmlsZV0gSW5wdXQgcHJvcGVydHkuJyk7XG5cdFx0XHRcdHJldHVybiByZWplY3QobnVsbCk7XG5cdFx0XHR9XG5cblx0XHRcdHJlYWRlci5yZWFkQXNEYXRhVVJMKHRoaXMuZmlsZSk7XG5cdFx0fSk7XG5cdH1cbn1cbiJdfQ==